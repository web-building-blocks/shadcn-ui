{
  "name": "alert",
  "files": [
    {
      "name": "alert.tsx",
      "content": "import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { motion } from \"framer-motion\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border px-4 py-5 text-sm [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground [&>svg~*]:pl-7\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n        information:\n          \"border-blue-500/50 text-blue-500 dark:border-blue-500 [&>svg]:text-blue-500\",\n        warning:\n          \"border-yellow-500/50 text-yellow-500 dark:border-yellow-500 [&>svg]:text-yellow-500\",\n        success:\n          \"border-green-500/50 text-green-500 dark:border-green-500 [&>svg]:text-green-500\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\nconst variantAnimations = {\n  default: {\n    initial: { opacity: 0, y: 20 },\n    animate: { opacity: 1, y: 0 },\n  },\n  destructive: {\n    initial: { opacity: 0, scale: 0.8 },\n    animate: { opacity: 1, scale: 1 },\n  },\n  information: {\n    initial: { x: -100, opacity: 0 },\n    animate: { x: 0, opacity: 1 },\n  },\n  warning: {\n    initial: { x: 100, opacity: 0 },\n    animate: { x: 0, opacity: 1 },\n  },\n  success: {\n    initial: { opacity: 0, y: -20 },\n    animate: { opacity: 1, y: 0 },\n  },\n}\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\n// const Alert = React.forwardRef<\n//   HTMLDivElement,\n//   React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants> & { animations?: keyof typeof variantAnimations }\n// >(({ className, variant = 'default', animations = 'none', ...props }, ref) => {\n//   const animation = variantAnimations[animations];\n\n//   return (\n//     <motion.div\n//       ref={ref}\n//       role=\"alert\"\n//       initial={animation.initial}\n//       animate={animation.animate}\n//       transition={animation.transition}\n//       className={cn(alertVariants({ variant }), className)}\n//       {...props}\n//     >\n//       {props.children}\n//     </motion.div>\n//   );\n// });\n// Alert.displayName = \"Alert\";\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n"
    }
  ],
  "type": "components:ui"
}